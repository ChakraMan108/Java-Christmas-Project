/* 
Packages:
1. UI
2. Service
3. Repository
*/

/* Package UI */
public interface Menu {
	public boolean isDisplayed() throws MenuException;
	public void displayMenu() throws MenuException;
	public String getString() throws MenuException;
	public long getLong() throws MenuException;
	public <T> void displayCollection(Collection<T> collection) throws MenuException;
}

/* Package Service: */
public interface BankService<T> {
	long getId(T type) throws BankServiceException;
}

/* Package Repository: */
public interface Repository<T> {
	public List<T> getAll() throws RepositoryException; 
	public T getById(int id) throws RepositoryException;
	public void add(T acc) throws RepositoryException;
	public void update(int id, T acc) throws RepositoryException;
	public void delete(int id) throws RepositoryException;
}

/* Repository interface will be implemented as BankAccountRepository, UserRepository, TransactionRepository and OperationRepository classes*/
public class BankAcountRepository implements Repository<BankAccount> 
{
	public List<BankAccount> getAll() {}; /* will implement List<BankAccount> */
	public BankAccount getById(int id) {};
	public void add(BankAccount acc) {};
	public void update(int id, BankAccount acc) {};
	public void delete(int id) {};
}

public class UserRepository implements Repository<User> 
{
	public List<User> getAll();
	public User getById(int id);
	public void add(User user);
	public void update(int id, User user);
	public void delete(int id);
}

public class TransactionRepository implements Repository<Transaction> 
{
	public List<Transaction> getAll();
	public Transaction getById(long id);
	public void add(Transaction transaction);
	public void update(int id, Transaction transaction);
	public void delete(int id);
}

public class OperationRepository implements Repository<Operation> 
{
	public List<Operation> getAll();
	public Operation getById(long id);
	public void add(Operation operation);
	public void update(int id, Operation operation);
	public void delete(int id);
}

----
/* BankService interface will be implemented as BankAccount, Customer, Transaction and Operation classes*/
public class BankAccount implements BankService
{
	boolean isActive();
	accountType getType();
	long getId();
	long getBalance();
	long deposit(long amount);
	long withdraw(long amount);
	transfer(long amount);
}

public class Customer
{
	public int getId(BankAccount acc);
	public String getFirstName(BankAccount acc);
	public String getLastName(BankAccount acc);
	public String getAddress(BankAccount acc);
}

public class Transaction 
{
	public int getId(BankAccount acc);
}

public class Operation
{
	public int getId(Customer customer);
}

/* Exceptions */
MenuException extends Exception; {}
RepositoryException extends Exception {};
BankServiceException extends Exception {};

/* List of operations: */
1 -- Customer Management
Create Customer
Update Customer Details

2 -- Account Management
Open New Account
Close Existing Account
Change Account Type

3 -- Account Display
Display Account Customer Details
Display Account Balance

4 -- Account Transactions
Deposit Funds to Account
Withdraw Funds from Account
Transfer Funds between Accounts

5 -- View Details 
Display Totals - Number of Users, Accounts, Transactions, Operations
Display Details of All Users & Accounts (filter) - Overdrawn, Millionaires, Account Type...
Display Details of All Transactions (filter) - time period




